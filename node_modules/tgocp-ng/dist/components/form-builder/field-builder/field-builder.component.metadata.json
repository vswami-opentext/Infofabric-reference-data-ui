[{"__symbolic":"module","version":4,"metadata":{"FieldBuilderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"field-builder","template":"<div [class]=\"rowClass\"  [formGroup]=\"form\" [ngSwitch]=\"field.type\" [ngClass]=\"{'fieldClass':true}\">\n  <label *ngIf=\"field?.label\"  class=\"ot-form-control-label\" [ngClass]=\"{'ot-required':field.required}\">\n    {{field.label}}</label>\n    <ng-container *ngIf=\"readOnly\">\n      <label *ngIf=\"!isObjectType(field.value)\" class=\"ot-form-value-label\"> {{field.value}}</label>\n      <label *ngIf=\"isObjectType(field.value)\" class=\"ot-form-value-label\">\n        <span class=\"\" *ngFor=\"let s of field.value; let isLast=last\">{{s}}{{isLast? '' : ',&nbsp;'}}</span>\n      </label>\n    </ng-container>\n   \n   <ng-container *ngIf=\"!readOnly\">\n    \n   <input type=\"text\" *ngSwitchCase=\"'digits'\"  [formControlName]=\"field.name\"\n   [ngClass]=\"form.get(field.name).touched && form.get(field.name).invalid ? 'ot-error':'ot-text'\"  \n   [maxlength]=\"field?.maxlength ? field?.maxlength : 15\"\n   [minlength]=\"field?.minlength\"\n   [pattern]=\"field?.pattern\"\n   [required]=\"field?.required\"\n   [attr.placeholder]=\"field?.placeholder\"\n   [attr.readonly]=\"field?.readonly ? true : null\"\n   [attr.disabled]=\"field?.disabled ? true : null\"\n   onlyDigits\n   >\n   <input type=\"text\" *ngSwitchCase=\"'number'\"  [formControlName]=\"field.name\"\n   [ngClass]=\"form.get(field.name).touched && form.get(field.name).invalid ? 'ot-error':'ot-text'\"  \n   [maxlength]=\"field?.maxlength ? field?.maxlength : 15\"\n   [minlength]=\"field?.minlength\"\n   [pattern]=\"field?.pattern\"\n   [required]=\"field?.required\"\n   [attr.placeholder]=\"field?.placeholder\"\n   [attr.readonly]=\"field?.readonly ? true : null\"\n   [attr.disabled]=\"field?.disabled ? true : null\"\n   numeric\n   > \n  \n   <input type=\"text\" *ngSwitchCase=\"'text'\"  [formControlName]=\"field.name\"\n   [ngClass]=\"form.get(field.name).touched && form.get(field.name).invalid ? 'ot-error':'ot-text'\"  \n   [maxlength]=\"field?.maxlength ? field?.maxlength : 120\"\n   [minlength]=\"field?.minlength\"\n   [pattern]=\"field?.pattern\"\n   [required]=\"field?.required\"\n   [attr.placeholder]=\"field?.placeholder\"\n   [attr.readonly]=\"field?.readonly ? true : null\"\n   [attr.disabled]=\"field?.disabled ? true : null\"\n   trim=\"blur\"\n   >\n  \n   <input type=\"text\" *ngSwitchCase=\"'email'\"  [formControlName]=\"field.name\"\n   [ngClass]=\"form.get(field.name).touched && form.get(field.name).invalid ? 'ot-error':'ot-text'\"  \n   [maxlength]=\"field?.maxlength ? field?.maxlength : 256\"\n   [minlength]=\"field?.minlength\"\n   [pattern]=\"field?.pattern\"\n   [required]=\"field?.required\"\n   [attr.placeholder]=\"field?.placeholder\"\n   [attr.readonly]=\"field?.readonly ? true : null\"\n   [attr.disabled]=\"field?.disabled ? true : null\"\n   trim=\"blur\"\n   >\n\n  \n<div class=\"ot-customfield-radiobtn-scrollbar\" *ngSwitchCase=\"'radio button'\" [perfectScrollbar]=\"scrollConfig\" >\n  <label *ngFor=\"let opt of field.options\" style=\"display:block\">\n      <input type=\"radio\" [formControlName]=\"field.name\"   \n      [ngClass]=\"form.get(field.name).touched && form.get(field.name).invalid ? 'ot-error':'ot-text'\"  \n      [required]=\"field?.required\"\n      [attr.readonly]=\"field?.readonly ? true : null\"\n      [attr.disabled]=\"field?.disabled ? true : null\"\n      [value]=\"opt.id\"\n      [readonly]=\"field.readonly\"\n      [disabled]=\"field.disabled\"\n      > {{opt.value}}\n\n  </label>\n\n</div>\n <ot-select-dropdown *ngSwitchCase=\"'drop-down'\"  [formControlName]=\"field.name\"\n [options]=\"field.options\"\n [readonly]=\"field.readonly\"\n [disabled]=\"field.disabled\"\n [dataKey]=\"field.optionsKey\"\n [optionLabel]=\"field.optionsLabel\"\n [returnKeyOnly]=\"true\"\n [attr.readonly]=\"field?.readonly ? true : null\"\n >\n</ot-select-dropdown > \n\n\n   <ot-multi-select *ngSwitchCase=\"'multivalue'\" [formControlName]=\"field.name\"\n   [options]=\"field.options\"\n   [readonly]=\"field.readonly\"\n   [disabled]=\"field.disabled\"\n   [dataKey]=\"field.optionsKey\"\n   [optionLabel]=\"field.optionsLabel\"\n   [returnKeyOnly]=\"true\"\n   [defaultLabel]=\"field.placeholder\"\n   [selectedItemsLabel]=\"field.selectedOptionMsg\"\n   [required]=\"field?.required\"\n   >\n  \n   </ot-multi-select> \n\n\n  \n  <input type=\"text\" *ngSwitchDefault  [formControlName]=\"field.name\" \n   [ngClass]=\"form.get(field.name).touched && form.get(field.name).invalid ? 'ot-error':'ot-text'\"\n   [maxlength]=\"field?.maxlength ? field.maxlength : 256\"\n   [minlength]=\"field?.minlength\"\n   [pattern]=\"field?.pattern\"\n   [required]=\"field?.required\"\n   [attr.placeholder]=\"field?.placeholder\"\n   [attr.readonly]=\"field?.readonly ? true : null\"\n   [attr.disabled]=\"field?.disabled ? true : null\"\n   trim=\"blur\"\n   >\n\n   \n   <ng-container *ngIf=\"form.get(field.name).touched\">\n     <label *ngIf=\"form.get(field.name).hasError('required')\" class=\"ot-error\">{{field?.validationMessages?.required}}</label>\n     <label *ngIf=\"form.get(field.name).hasError('pattern')\" class=\"ot-error\">{{field?.validationMessages?.pattern}}</label>\n     <label *ngIf=\"form.get(field.name).hasError('minlength')\" class=\"ot-error\">{{field?.validationMessages?.minlength}}</label>\n     <label *ngIf=\"form.get(field.name).hasError('maxlength')\" class=\"ot-error\">{{field?.validationMessages?.maxlength}}</label>\n   </ng-container>\n  </ng-container>  \n  </div>\n  \n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngAfterContentInit":[{"__symbolic":"method"}],"rowClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"isObjectType":[{"__symbolic":"method"}]}}}}]